//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PT.DataLibrary.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PTContext : DbContext
    {
        public PTContext()
            : base("name=PTContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblCity> tblCity { get; set; }
        public virtual DbSet<tblCountry> tblCountry { get; set; }
        public virtual DbSet<tblState> tblState { get; set; }
    
        public virtual int sp_tblCity_delete(Nullable<int> cityID, Nullable<int> stateID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblCity_delete", cityIDParameter, stateIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter);
        }
    
        public virtual int sp_tblCity_insert(ObjectParameter iDENTITY, Nullable<int> stateID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblCity_insert", iDENTITY, stateIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter);
        }
    
        public virtual ObjectResult<sp_tblCity_select_Result> sp_tblCity_select(Nullable<int> cityID, Nullable<int> stateID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblCity_select_Result>("sp_tblCity_select", cityIDParameter, stateIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter);
        }
    
        public virtual int sp_tblCity_update(Nullable<int> cityID, Nullable<int> stateID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblCity_update", cityIDParameter, stateIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter);
        }
    
        public virtual int sp_tblCountry_delete(Nullable<int> countryID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblCountry_delete", countryIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter);
        }
    
        public virtual int sp_tblCountry_insert(ObjectParameter iDENTITY, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblCountry_insert", iDENTITY, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter);
        }
    
        public virtual ObjectResult<sp_tblCountry_select_Result> sp_tblCountry_select(Nullable<int> countryID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblCountry_select_Result>("sp_tblCountry_select", countryIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter);
        }
    
        public virtual int sp_tblCountry_update(Nullable<int> countryID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblCountry_update", countryIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter);
        }
    
        public virtual int sp_tblState_delete(Nullable<int> stateID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted, Nullable<int> countryID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblState_delete", stateIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter, countryIDParameter);
        }
    
        public virtual int sp_tblState_insert(ObjectParameter iDENTITY, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted, Nullable<int> countryID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblState_insert", iDENTITY, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter, countryIDParameter);
        }
    
        public virtual ObjectResult<sp_tblState_select_Result> sp_tblState_select(Nullable<int> stateID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted, Nullable<int> countryID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblState_select_Result>("sp_tblState_select", stateIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter, countryIDParameter);
        }
    
        public virtual int sp_tblState_update(Nullable<int> stateID, string name, Nullable<int> createdBy, Nullable<System.DateTime> createdOnDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedOnDate, Nullable<bool> isDeleted, Nullable<int> countryID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdOnDateParameter = createdOnDate.HasValue ?
                new ObjectParameter("CreatedOnDate", createdOnDate) :
                new ObjectParameter("CreatedOnDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedOnDateParameter = updatedOnDate.HasValue ?
                new ObjectParameter("UpdatedOnDate", updatedOnDate) :
                new ObjectParameter("UpdatedOnDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tblState_update", stateIDParameter, nameParameter, createdByParameter, createdOnDateParameter, updatedByParameter, updatedOnDateParameter, isDeletedParameter, countryIDParameter);
        }
    
        public virtual ObjectResult<sp_tblCountry_pagination_select_Result> sp_tblCountry_pagination_select(Nullable<int> start, Nullable<int> length, string searchtext)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("searchtext", searchtext) :
                new ObjectParameter("searchtext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblCountry_pagination_select_Result>("sp_tblCountry_pagination_select", startParameter, lengthParameter, searchtextParameter);
        }
    
        public virtual ObjectResult<sp_tblState_pagination_select_Result> sp_tblState_pagination_select(Nullable<int> start, Nullable<int> length, string searchtext)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("searchtext", searchtext) :
                new ObjectParameter("searchtext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblState_pagination_select_Result>("sp_tblState_pagination_select", startParameter, lengthParameter, searchtextParameter);
        }
    
        public virtual ObjectResult<sp_tblCity_pagination_select_Result> sp_tblCity_pagination_select(Nullable<int> start, Nullable<int> length, string searchtext)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(int));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("length", length) :
                new ObjectParameter("length", typeof(int));
    
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("searchtext", searchtext) :
                new ObjectParameter("searchtext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tblCity_pagination_select_Result>("sp_tblCity_pagination_select", startParameter, lengthParameter, searchtextParameter);
        }
    }
}
